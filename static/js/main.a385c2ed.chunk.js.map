{"version":3,"sources":["features/character/images/darkElfMage.jpg","features/character/images/elfMage.png","features/character/images/priest.jpg","features/character/images/warrior.jpg","features/character/images/hunter.jpg","features/character/images/druid.jpg","features/toolbar/images/beam-orange-2.png","features/toolbar/images/explosion-orange-3.png","features/toolbar/images/heal-royal-3.png","features/toolbar/images/runes-orange-3.png","features/todos/actions.js","features/todos/reducer.js","store/root-reducer.js","features/todos/epics.js","store/root-epics.js","services/logger-service.js","services/index.js","store/index.js","features/character/components/Character.jsx","features/character/images/index.js","features/character/CharClasses.js","features/party/components/Party.jsx","features/castingbar/components/CastingBar.jsx","features/toolbar/images/index.js","features/toolbar/components/ToolBar.jsx","routes/home.jsx","serviceWorker.js","index.js"],"names":["module","exports","addTodo","createAction","removeTodo","loadTodos","ping","pong","todos","createReducer","actions","state","action","push","payload","isPinging","todosReducer","combineReducers","rootReducer","app","pingEpic","action$","pipe","ofType","type","delay","mapTo","combineEpics","Object","values","todosEpics","log","console","logger","epicMiddleware","createEpicMiddleware","dependencies","services","store","configureStore","reducer","middleware","preloadedState","run","rootEpic","CharacterSegment","styled","Segment","CharInfoDiv","div","Portrait","Image","Character","props","charClass","size","src","image","name","Progress","progress","value","total","success","Images","freeze","ROGUE","MAGE","PRIEST","WARRIOR","HUNTER","DRUID","CharClasses","Party","Group","CastingBar","color","LESSER_HEAL","GREATER_HEAL","INSTANT_HEAL","MASS_HEAL","ImageButton","Button","ToolBar","List","horizontal","rounded","images","GameDiv","Column","Grid","ToolBarRow","Row","Home","columns","textAlign","Boolean","window","location","hostname","match","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a385c2ed.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/darkElfMage.10fb5387.jpg\";","module.exports = __webpack_public_path__ + \"static/media/elfMage.17401227.png\";","module.exports = __webpack_public_path__ + \"static/media/priest.50fd2d51.jpg\";","module.exports = __webpack_public_path__ + \"static/media/warrior.3208cff0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hunter.5ce1bfe1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/druid.e70ca2f2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/beam-orange-2.8bc18c34.png\";","module.exports = __webpack_public_path__ + \"static/media/explosion-orange-3.ba698f7c.png\";","module.exports = __webpack_public_path__ + \"static/media/heal-royal-3.83878cf3.png\";","module.exports = __webpack_public_path__ + \"static/media/runes-orange-3.b3df9fe4.png\";","import { createAction } from '@reduxjs/toolkit'\n\nexport const addTodo = createAction('ADD_TODO')\nexport const removeTodo = createAction('REMOVE_TODO')\nexport const loadTodos = createAction('LOAD_TODOS')\n\nexport const ping = createAction('PING')\nexport const pong = createAction('PONG')\n","import { combineReducers } from 'redux';\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport * as actions from \"./actions\";\n\nexport const todos = createReducer([], {\n  [actions.addTodo]: (state, action) => { state.push(action.payload)},\n  [actions.removeTodo]: (state, action) => {},\n  [actions.loadTodos]: (state, action) => {}\n})\n\nexport const ping = createReducer({ isPinging: false }, {\n  [actions.ping]: (state, action) => { state.isPinging = true },\n  [actions.pong]: (state, action) => { state.isPinging = false }\n})\n\nconst todosReducer = combineReducers({\n  todos,\n  ping\n})\n\nexport default todosReducer\n","import { combineReducers } from 'redux';\n\nimport todosReducer from '../features/todos/reducer';\n\nconst rootReducer = combineReducers({\n  app: todosReducer\n});\n\nexport default rootReducer;\n","import { delay, mapTo } from \"rxjs/operators\";\nimport { ofType } from 'redux-observable';\n\nimport { ping, pong } from \"./actions\";\n\nexport const pingEpic = action$ => action$.pipe(\n  ofType(ping.type),\n  delay(1000), // Asynchronously wait 1000ms then continue\n  mapTo(pong())\n);\n","import { combineEpics } from 'redux-observable';\n\nimport * as todosEpics from '../features/todos/epics';\n\nexport default combineEpics(...Object.values(todosEpics));\n","export default { log: console.log };\n","import * as logger from './logger-service';\n\nexport default {\n  logger\n};\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport { createEpicMiddleware } from 'redux-observable';\nimport rootReducer from './root-reducer';\nimport rootEpic from \"./root-epics\";\nimport services from \"../services\";\n\nexport const epicMiddleware = createEpicMiddleware({\n  dependencies: services\n})\n\nconst initialState = {};\n\n// create store\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware: [epicMiddleware],\n  preloadedState: initialState\n});\n\nepicMiddleware.run(rootEpic)\n\n// export store singleton instance\nexport default store;\n","import React from 'react'\nimport { Image, Progress, Segment } from 'semantic-ui-react'\nimport styled from 'styled-components'\n\nconst CharacterSegment = styled(Segment)`\n  cursor: pointer;\n  user-select: none;\n  display: flex;\n  align-items: center;\n  padding: 0 1em !important;\n`\n\nconst CharInfoDiv = styled.div`\n  flex-grow: 1;\n  padding-left: 1em;\n  margin-top: 2px;\n  margin-bottom: -13px;\n`\n\nconst Portrait = styled(Image)`\n  border-radius: 50%;\n`\n\nconst Character = props => {\n  const { charClass } = props\n  return (\n    <CharacterSegment>\n      <div>\n        <Portrait size='mini' src={charClass.image} />\n      </div>\n      <CharInfoDiv>\n        <span>{charClass.name}</span>\n        <Progress size='small' progress='ratio' value={900} total={1000} success />\n      </CharInfoDiv>\n    </CharacterSegment>\n  )\n}\nexport default Character\n","import ROGUE from './darkElfMage.jpg'\nimport MAGE from './elfMage.png'\nimport PRIEST from './priest.jpg'\nimport WARRIOR from './warrior.jpg'\nimport HUNTER from './hunter.jpg'\nimport DRUID from './druid.jpg'\n\nconst Images = Object.freeze({\n  ROGUE,\n  MAGE,\n  PRIEST,\n  WARRIOR,\n  HUNTER,\n  DRUID\n});\n\nexport default Images\n","import Images from \"./images\";\n\nconst CharClasses = Object.freeze({\n  WARRIOR: { name: 'Warrior', image: Images.WARRIOR},\n  ROGUE: { name: 'Rogue', image: Images.ROGUE},\n  MAGE: { name: 'Mage', image: Images.MAGE},\n  HUNTER: { name: 'Hunter', image: Images.HUNTER},\n  DRUID: { name: 'Druid', image: Images.DRUID},\n  PRIEST: { name: 'Priest', image: Images.PRIEST},\n});\n\nexport default CharClasses\n","import React from 'react'\nimport Character from '../../character/components/Character'\nimport CharClasses from '../../character/CharClasses'\nimport { Segment } from 'semantic-ui-react'\n\nconst Party = () => (\n  <Segment.Group>\n    <Character charClass={CharClasses.WARRIOR} />\n    <Character charClass={CharClasses.ROGUE} />\n    <Character charClass={CharClasses.HUNTER} />\n    <Character charClass={CharClasses.DRUID} />\n    <Character charClass={CharClasses.MAGE} />\n    <Character charClass={CharClasses.PRIEST} />\n  </Segment.Group>\n)\nexport default Party\n","import React from 'react'\nimport { Progress } from 'semantic-ui-react'\n\nconst CastingBar = () => {\n  return (\n    <Progress color='yellow' size='small' />\n  )\n}\n\nexport default CastingBar\n","import LESSER_HEAL from './beam-orange-2.png'\nimport GREATER_HEAL from './explosion-orange-3.png'\nimport INSTANT_HEAL from './heal-royal-3.png'\nimport MASS_HEAL from './runes-orange-3.png'\n\nconst Images = Object.freeze({\n  LESSER_HEAL,\n  GREATER_HEAL,\n  INSTANT_HEAL,\n  MASS_HEAL\n});\n\nexport default Images","import React from 'react'\nimport styled from 'styled-components'\nimport { Button, Image, List } from 'semantic-ui-react'\nimport images from '../images'\n\nconst ImageButton = styled(Button)`\n  padding: 0.35em !important;\n`\n\nconst ToolBar = () => {\n  return (\n    <List horizontal>\n      <ImageButton>\n        <Image rounded src={images.LESSER_HEAL} size='mini' />\n      </ImageButton>\n      <ImageButton>\n        <Image rounded src={images.GREATER_HEAL} size='mini' />\n      </ImageButton>\n      <ImageButton>\n        <Image rounded src={images.INSTANT_HEAL} size='mini' />\n      </ImageButton>\n      <ImageButton>\n        <Image rounded src={images.MASS_HEAL} size='mini' />\n      </ImageButton>\n    </List>\n  )\n}\n\nexport default ToolBar\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Grid } from 'semantic-ui-react'\nimport Party from '../features/party/components/Party'\nimport CastingBar from '../features/castingbar/components/CastingBar'\nimport ToolBar from '../features/toolbar/components/ToolBar'\n\nconst GameDiv = styled.div`\n  padding: 1em;\n`\n\nconst Column = styled(Grid.Column)`\n  max-width: 300px;\n`\n\nconst ToolBarRow = styled(Grid.Row)`\n  margin-top: -22px;\n` \n\nfunction Home() {\n  return (\n    <GameDiv>\n      <Grid columns={1} textAlign='center'>\n        <Grid.Row>\n          <Column>\n            <Party />\n          </Column>\n        </Grid.Row>\n        <Grid.Row>\n          <Column>\n            <CastingBar />\n          </Column>\n        </Grid.Row>\n        <ToolBarRow>\n          <Column>\n            <ToolBar />\n          </Column>\n        </ToolBarRow>\n      </Grid>\n    </GameDiv>\n  )\n}\n\nexport default Home\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store'\nimport 'semantic-ui-css/semantic.min.css'\nimport './index.css';\nimport Home from './routes/home';\nimport * as serviceWorker from './serviceWorker';\n\nconst Root = () => (\n  <div>\n    <Provider store={store}>\n      <Home />\n    </Provider>\n  </div>\n);\n\nrender(<Root />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}